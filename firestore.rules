rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /users/{userId} {
      allow read: if isLoggedIn();
      allow create: if belongsTo(userId);

      match /journal/{noteId} {
        allow read: if belongsTo(userId);
        allow create, update: if canCreateNote(userId);
        allow delete: if belongsTo(userId);
      }
    }

    function isLoggedIn() {
      return request.auth.uid != null;
    }

    function belongsTo(userId) {
      return request.auth.uid == userId; 
    }

    function canCreateNote(userId) {

      let isSignedIn = request.auth.uid != null;
      let isOwner = request.auth.uid == userId;

      let isTitleString = request.resource.data.title is string;
      let isTitleNotTooShort = request.resource.data.title.size() > 0;

      let isBodyString = request.resource.data.body is string;
      let isBodyNotTooLong = request.resource.data.body.size() <= 10000;

      let isImagesUrls = request.resource.data.imagesUrls is list;

      let isDoesNotHaveTooMuchImages = request.resource.data.imagesUrls.size() <= 10;

      let isDateTimestamp = request.resource.data.date is timestamp;

      return isSignedIn && isOwner && isTitleString && isTitleNotTooShort && isBodyString  && isBodyNotTooLong && isImagesUrls  && isDoesNotHaveTooMuchImages && isDateTimestamp;
    }
  }
}